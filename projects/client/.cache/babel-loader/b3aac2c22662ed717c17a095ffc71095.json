{"ast":null,"code":"// src/track-size.ts\nfunction trackElementSize(element, callback) {\n  var _a;\n\n  if (!element) {\n    callback(void 0);\n    return;\n  }\n\n  callback({\n    width: element.offsetWidth,\n    height: element.offsetHeight\n  });\n  const win = (_a = element.ownerDocument.defaultView) != null ? _a : window;\n  const observer = new win.ResizeObserver(entries => {\n    if (!Array.isArray(entries) || !entries.length) return;\n    const [entry] = entries;\n    let width;\n    let height;\n\n    if (\"borderBoxSize\" in entry) {\n      const borderSizeEntry = entry[\"borderBoxSize\"];\n      const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n      width = borderSize[\"inlineSize\"];\n      height = borderSize[\"blockSize\"];\n    } else {\n      width = element.offsetWidth;\n      height = element.offsetHeight;\n    }\n\n    callback({\n      width,\n      height\n    });\n  });\n  observer.observe(element, {\n    box: \"border-box\"\n  });\n  return () => observer.unobserve(element);\n}\n\nexport { trackElementSize };","map":{"version":3,"names":["trackElementSize","element","callback","_a","width","offsetWidth","height","offsetHeight","win","ownerDocument","defaultView","window","observer","ResizeObserver","entries","Array","isArray","length","entry","borderSizeEntry","borderSize","observe","box","unobserve"],"sources":["C:/Users/barsm/Desktop/dummy-final/node_modules/@zag-js/element-size/dist/chunk-LEOPH5VU.mjs"],"sourcesContent":["// src/track-size.ts\nfunction trackElementSize(element, callback) {\n  var _a;\n  if (!element) {\n    callback(void 0);\n    return;\n  }\n  callback({ width: element.offsetWidth, height: element.offsetHeight });\n  const win = (_a = element.ownerDocument.defaultView) != null ? _a : window;\n  const observer = new win.ResizeObserver((entries) => {\n    if (!Array.isArray(entries) || !entries.length)\n      return;\n    const [entry] = entries;\n    let width;\n    let height;\n    if (\"borderBoxSize\" in entry) {\n      const borderSizeEntry = entry[\"borderBoxSize\"];\n      const borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;\n      width = borderSize[\"inlineSize\"];\n      height = borderSize[\"blockSize\"];\n    } else {\n      width = element.offsetWidth;\n      height = element.offsetHeight;\n    }\n    callback({ width, height });\n  });\n  observer.observe(element, { box: \"border-box\" });\n  return () => observer.unobserve(element);\n}\n\nexport {\n  trackElementSize\n};\n"],"mappings":"AAAA;AACA,SAASA,gBAAT,CAA0BC,OAA1B,EAAmCC,QAAnC,EAA6C;EAC3C,IAAIC,EAAJ;;EACA,IAAI,CAACF,OAAL,EAAc;IACZC,QAAQ,CAAC,KAAK,CAAN,CAAR;IACA;EACD;;EACDA,QAAQ,CAAC;IAAEE,KAAK,EAAEH,OAAO,CAACI,WAAjB;IAA8BC,MAAM,EAAEL,OAAO,CAACM;EAA9C,CAAD,CAAR;EACA,MAAMC,GAAG,GAAG,CAACL,EAAE,GAAGF,OAAO,CAACQ,aAAR,CAAsBC,WAA5B,KAA4C,IAA5C,GAAmDP,EAAnD,GAAwDQ,MAApE;EACA,MAAMC,QAAQ,GAAG,IAAIJ,GAAG,CAACK,cAAR,CAAwBC,OAAD,IAAa;IACnD,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAD,IAA2B,CAACA,OAAO,CAACG,MAAxC,EACE;IACF,MAAM,CAACC,KAAD,IAAUJ,OAAhB;IACA,IAAIV,KAAJ;IACA,IAAIE,MAAJ;;IACA,IAAI,mBAAmBY,KAAvB,EAA8B;MAC5B,MAAMC,eAAe,GAAGD,KAAK,CAAC,eAAD,CAA7B;MACA,MAAME,UAAU,GAAGL,KAAK,CAACC,OAAN,CAAcG,eAAd,IAAiCA,eAAe,CAAC,CAAD,CAAhD,GAAsDA,eAAzE;MACAf,KAAK,GAAGgB,UAAU,CAAC,YAAD,CAAlB;MACAd,MAAM,GAAGc,UAAU,CAAC,WAAD,CAAnB;IACD,CALD,MAKO;MACLhB,KAAK,GAAGH,OAAO,CAACI,WAAhB;MACAC,MAAM,GAAGL,OAAO,CAACM,YAAjB;IACD;;IACDL,QAAQ,CAAC;MAAEE,KAAF;MAASE;IAAT,CAAD,CAAR;EACD,CAhBgB,CAAjB;EAiBAM,QAAQ,CAACS,OAAT,CAAiBpB,OAAjB,EAA0B;IAAEqB,GAAG,EAAE;EAAP,CAA1B;EACA,OAAO,MAAMV,QAAQ,CAACW,SAAT,CAAmBtB,OAAnB,CAAb;AACD;;AAED,SACED,gBADF"},"metadata":{},"sourceType":"module"}