{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\barsm\\\\Desktop\\\\dummy-final\\\\projects\\\\client\\\\src\\\\pages\\\\Login2.jsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport axios from 'axios';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const inputUsernameOrEmail = useRef();\n  const inputPassword = useRef();\n\n  let onLogin = async () => {\n    try {\n      let usernameOrEmail = inputUsernameOrEmail.current.value;\n      let password = inputPassword.current.value;\n      let response = await axios.get(`http://localhost:5004/users/login?usernameOrEmail=${usernameOrEmail}&password=${password}`);\n      toast(response.data.message);\n      localStorage.setItem('myToken', response.data.data.token);\n    } catch (error) {\n      toast(error.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container px-5 py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleInputEmail1\",\n          children: \"Email or Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ref: inputUsernameOrEmail,\n          class: \"form-control\",\n          id: \"exampleInputEmail1\",\n          \"aria-describedby\": \"emailHelp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleInputPassword1\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ref: inputPassword,\n          class: \"form-control\",\n          id: \"exampleInputPassword1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          class: \"form-check-input\",\n          id: \"exampleCheck1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"form-check-label\",\n          for: \"exampleCheck1\",\n          children: \"Check me out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: onLogin,\n        class: \"btn btn-danger\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"3cgp7Nl+v6E/Fh9XNCWU4lLgof8=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useRef","axios","toast","Toaster","Login","inputUsernameOrEmail","inputPassword","onLogin","usernameOrEmail","current","value","password","response","get","data","message","localStorage","setItem","token","error"],"sources":["C:/Users/barsm/Desktop/dummy-final/projects/client/src/pages/Login2.jsx"],"sourcesContent":["import { useRef } from 'react';\r\nimport axios from 'axios';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport default function Login() {\r\n\r\n    const inputUsernameOrEmail = useRef()\r\n    const inputPassword = useRef()\r\n\r\n    let onLogin = async () => {\r\n        try {\r\n            let usernameOrEmail = inputUsernameOrEmail.current.value\r\n            let password = inputPassword.current.value\r\n\r\n            let response = await axios.get(`http://localhost:5004/users/login?usernameOrEmail=${usernameOrEmail}&password=${password}`)\r\n            toast(response.data.message)\r\n            localStorage.setItem('myToken', response.data.data.token)\r\n        } catch (error) {\r\n            toast(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container px-5 py-5\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleInputEmail1\">Email or Username</label>\r\n                    <input type=\"email\" ref={inputUsernameOrEmail} class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" />\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"exampleInputPassword1\">Password</label>\r\n                    <input type=\"password\" ref={inputPassword} class=\"form-control\" id=\"exampleInputPassword1\" />\r\n                </div>\r\n                <div class=\"form-group form-check\">\r\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\r\n                    <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n                </div>\r\n                <button type=\"submit\" onClick={onLogin} class=\"btn btn-danger\">Login</button>\r\n                <Toaster />\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,iBAA/B;;;AAEA,eAAe,SAASC,KAAT,GAAiB;EAAA;;EAE5B,MAAMC,oBAAoB,GAAGL,MAAM,EAAnC;EACA,MAAMM,aAAa,GAAGN,MAAM,EAA5B;;EAEA,IAAIO,OAAO,GAAG,YAAY;IACtB,IAAI;MACA,IAAIC,eAAe,GAAGH,oBAAoB,CAACI,OAArB,CAA6BC,KAAnD;MACA,IAAIC,QAAQ,GAAGL,aAAa,CAACG,OAAd,CAAsBC,KAArC;MAEA,IAAIE,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,qDAAoDL,eAAgB,aAAYG,QAAS,EAApG,CAArB;MACAT,KAAK,CAACU,QAAQ,CAACE,IAAT,CAAcC,OAAf,CAAL;MACAC,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCL,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBI,KAAnD;IACH,CAPD,CAOE,OAAOC,KAAP,EAAc;MACZjB,KAAK,CAACiB,KAAK,CAACP,QAAN,CAAeE,IAAf,CAAoBC,OAArB,CAAL;IACH;EACJ,CAXD;;EAaA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,qBAAf;MAAA,wBACI;QAAK,KAAK,EAAC,YAAX;QAAA,wBACI;UAAO,GAAG,EAAC,oBAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,OAAZ;UAAoB,GAAG,EAAEV,oBAAzB;UAA+C,KAAK,EAAC,cAArD;UAAoE,EAAE,EAAC,oBAAvE;UAA4F,oBAAiB;QAA7G;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,KAAK,EAAC,YAAX;QAAA,wBACI;UAAO,GAAG,EAAC,uBAAX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC,UAAZ;UAAuB,GAAG,EAAEC,aAA5B;UAA2C,KAAK,EAAC,cAAjD;UAAgE,EAAE,EAAC;QAAnE;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eASI;QAAK,KAAK,EAAC,uBAAX;QAAA,wBACI;UAAO,IAAI,EAAC,UAAZ;UAAuB,KAAK,EAAC,kBAA7B;UAAgD,EAAE,EAAC;QAAnD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,KAAK,EAAC,kBAAb;UAAgC,GAAG,EAAC,eAApC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QATJ,eAaI;QAAQ,IAAI,EAAC,QAAb;QAAsB,OAAO,EAAEC,OAA/B;QAAwC,KAAK,EAAC,gBAA9C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAbJ,eAcI,QAAC,OAAD;QAAA;QAAA;QAAA;MAAA,QAdJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAoBH;;GAtCuBH,K;;KAAAA,K"},"metadata":{},"sourceType":"module"}